/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2022-03-26 16:17:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.cs336project.pkg.*;
import java.io.*;
import java.util.*;
import java.sql.*;
import java.time.*;

public final class addItem_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!--Import some libraries that have classes that we need -->\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\n");
      out.write("<title>Add Item</title>\n");
      out.write("</head>\n");
      out.write("\t\t\t");


				if(session.getAttribute("username") == null){
					response.sendRedirect("login.jsp");
				}
			sellUpdate.update();

			
      out.write("\n");
      out.write("<body>\n");
      out.write("\t");

	
	try{
		
		String category_name = request.getParameter("category_name");
		
		if(category_name.equals("Select")){
			
      out.write("\n");
      out.write("\t\t\t<script>\n");
      out.write("\t\t\t\talert(\"Please Select a Valid Category\");\n");
      out.write("\t\t\t\twindow.location.href = \"sell.jsp\";\n");
      out.write("\t\t\t</script>\n");
      out.write("\t\t\t");

		}
		else{
					
			String item_id =  String.valueOf(GetID.getItemID());
			String item_name = request.getParameter("item_name");
			String minimum_price = request.getParameter("minimum_price");
			String closing_date = request.getParameter("closing_date");
			String closing_time = request.getParameter("closing_time");
			String reserve = request.getParameter("reserve");
			
			LocalDateTime closing_date_time = LocalDateTime.parse(closing_date+"T"+closing_time);
			LocalDateTime current_time = LocalDateTime.now();
			
			if(closing_date_time.compareTo(current_time) < 0){
				
      out.write("\n");
      out.write("\t\t\t\t<script>\n");
      out.write("\t\t\t\t\talert(\"Please Enter A Valid Date and Time\");\n");
      out.write("\t\t\t\t\twindow.location.href = \"sell.jsp\";\n");
      out.write("\t\t\t\t</script>\n");
      out.write("\t\t\t\t");

			}
			else{
					
				if(reserve.equals("true")){
				
						String reserve_value = String.valueOf(request.getParameter("reserve_value"));
						
						
						if(Integer.parseInt(minimum_price) >= Integer.parseInt(reserve_value) ){
							
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<script>\n");
      out.write("\t\t\t\t\t\t\t\talert(\"Please Enter A Reserve Value that is greater than the Minimum Price\");\n");
      out.write("\t\t\t\t\t\t\t\twindow.location.href = \"sell.jsp\";\n");
      out.write("\t\t\t\t\t\t\t</script>\n");
      out.write("\t\t\t\t\t\t\t");

							
							
						}
						else{
							
							ApplicationDB db = new ApplicationDB();
							Connection con = db.getConnection();
							
							PreparedStatement ps = con.prepareStatement("INSERT INTO item VALUES (?, ?, ?, ?, ?, ?)");
							ps.setString(1,item_id);
							ps.setString(2,item_name);
							ps.setString(3,category_name);
							ps.setString(4, String.valueOf(minimum_price));
							ps.setString(5, "-1");
							ps.setString(6,closing_date + " " + closing_time);
							ps.executeUpdate();
							
							PreparedStatement ps1 = con.prepareStatement("INSERT INTO reserve VALUES(?, ?)");
							ps1.setString(1, item_id);
							ps1.setString(2, reserve_value);
				
							ps1.executeUpdate();
						
							String username = String.valueOf(session.getAttribute("username"));
						
							PreparedStatement ps2 = con.prepareStatement("INSERT INTO sell_list VALUES (?, ?)");
							ps2.setString(1, item_id);
							ps2.setString(2, username);
							ps2.executeUpdate();
						
							db.closeConnection(con);
							response.sendRedirect("buy.jsp");
						
						
						}
						
				}
				else{
					
					ApplicationDB db = new ApplicationDB();
					Connection con = db.getConnection();
					
					PreparedStatement ps = con.prepareStatement("INSERT INTO item VALUES (?, ?, ?, ?, ?, ?)");
					ps.setString(1,item_id);
					ps.setString(2,item_name);
					ps.setString(3,category_name);
					ps.setString(4, String.valueOf(minimum_price));
					ps.setString(5, "-1");
					ps.setString(6,closing_date + " " + closing_time);
					
					
					ps.executeUpdate();
					
					String username = String.valueOf(session.getAttribute("username"));
					
					PreparedStatement ps2 = con.prepareStatement("INSERT INTO sell_list VALUES (?, ?)");
					ps2.setString(1, item_id);
					ps2.setString(2, username);
					ps2.executeUpdate();
					
					db.closeConnection(con);
					response.sendRedirect("buy.jsp");
					
					
					
				}
					
					
			}
					
		}

	} 
	catch (Exception e) {

		out.println(e);
	}
			
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
